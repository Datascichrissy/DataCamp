--Chapter 1
-- Count the number of records in the people table
Select Count(*) as count_records
from people;

-- Return the unique countries from the films table
SELECT DISTINCT (country)
from films;

-- Debug this code
SELECT certification
FROM films
LIMIT 5;

-- Rewrite this query
SELECT person_id, role 
FROM roles 
LIMIT 10;

--Chapter 2
-- Select film_ids and imdb_score with an imdb_score over 7.0
SELECT film_id, imdb_score
FROM reviews
WHERE imdb_score >7.0;

-- Count the Spanish-language films
SELECT Count(language) as count_spanish
FROM
films
WHERE language = 'Spanish';

-- Select the title and release_year for all German-language films released before 2000
SELECT title, release_year
FROM films
WHERE release_year < 2000 AND language = 'German';

-- Find the title and year of films from the 1990 or 1999
SELECT title, release_year
FROM films
WHERE release_year = 1990 OR release_year = 1999;

-- Select the title and release_year for films released between 1990 and 2000
SELECT title, release_year
FROM films
WHERE release_year BETWEEN 1990 AND 2000;

-- Select the names that start with B
SELECT name
FROM people
WHERE name like 'B%';

-- Find the title and release_year for all films over two hours in length released in 1990 and 2000
SELECT title, release_year
FROM films 
WHERE (release_year = 1990 OR release_year = 2000)
AND duration > 120;

-- Find the title and language of all films in English, Spanish, and French
SELECT title, language
FROM films
WHERE language IN('English', 'Spanish', 'French');

-- Find the title, certification, and language all films certified NC-17 or R that are in English, Italian, or Greek
SELECT title, certification, language
FROM films
WHERE (certification ='NC-17' or certification ='R') 
AND language IN('English','Italian','Greek');

-- Count the unique titles
SELECT Count(DISTINCT(Title)) AS nineties_english_films_for_teens
FROM films
-- Filter to release_years to between 1990 and 1999
WHERE release_year BETWEEN 1990 AND 1999
-- Filter to English-language films
	AND language = 'English'
-- Narrow it down to G, PG, and PG-13 certifications
	AND certification IN ('G','PG', 'PG-13');

-- List all film titles with missing budgets
SELECT title as no_budget_info
FROM films
WHERE budget IS NULL;

-- Count the number of films we have language data for
SELECT count(*) as count_language_known
FROM films
WHERE language IS NOT NULL;

--Chapter 3
-- Query the sum of film durations
SELECT SUM(duration) as total_duration
FROM films;

-- Calculate the average duration of all films
SELECT AVG(duration) as average_duration
FROM films;

-- Find the latest release_year
SELECT MAX(release_year) as latest_year
FROM films;

-- Find the duration of the shortest film
SELECT MIN(duration)as shortest_film
FROM films;

-- Calculate the sum of gross from the year 2000 or later
SELECT SUM(gross) as total_gross
FROM films
WHERE release_year >=2000;

-- Calculate the average gross of films that start with A
SELECT AVG(gross) as avg_gross_A
FROM films
WHERE title LIKE 'A%';

-- Calculate the lowest gross film in 1994
SELECT MIN(gross) as lowest_gross
FROM films
WHERE release_year = 1994;

-- Calculate the highest gross film released between 2000-2012
SELECT MAX(gross) as highest_gross
FROM films
WHERE release_year BETWEEN 2000 and 2012;

-- Round the average number of facebook_likes to one decimal place
SELECT round(avg(facebook_likes),1) as avg_facebook_likes
FROM reviews;

-- Calculate the average budget rounded to the thousands
SELECT round(avg(budget),-3) as avg_budget_thousands
FROM films;

-- Calculate the title and duration_hours from films
SELECT title, (duration/60.0) as duration_hours
FROM films;

-- Round duration_hours to two decimal places
SELECT title, ROUND(duration / 60.0,2) AS duration_hours
FROM films;

--Chapter 4

-- Select name from people and sort alphabetically
SELECT name
FROM people
order by name asc;

-- Select the title and duration from longest to shortest film
SELECT title, duration
FROM films
ORDER BY duration desc;

-- Select the release year, duration, and title sorted by release year and duration
SELECT release_year, duration, title
FROM films
ORDER BY release_year, duration;

-- Select the certification, release year, and title sorted by certification and release year
SELECT certification, release_year, title
FROM films
ORDER BY certification, release_year, title asc;

-- Find the release_year and film_count of each year
SELECT release_year, count(*) as film_count
FROM films
GROUP BY release_year;

-- Find the release_year and average duration of films for each year
SELECT release_year, avg(duration) as avg_duration
FROM films
GROUP BY release_year;

-- Find the release_year, country, and max_budget, then group and order by release_year and country
SELECT release_year, country, MAX(budget) as max_budget
FROM films
GROUP BY 
release_year, country;

--Determine which release_year has films with the most diverse language 
SELECT release_year, count(distinct(language)) as diverse_language
FROM films
GROUP BY release_year 
ORDER BY diverse_language desc;

 -- Select the country and distinct count of certification as certification_count
SELECT country, count(distinct(certification)) as certification_count
FROM films
-- Group by country
GROUP BY country
-- Filter results to countries with more than 10 different certifications
HAVING count(distinct(certification)) >10;

-- Select the country and average_budget from films
SELECT country, avg(budget) as average_budget
FROM films
-- Group by country
GROUP BY Country
-- Filter to countries with an average_budget of more than one billion
HAVING avg(budget) >1000000000
-- Order by descending order of the aggregated budget
ORDER BY average_budget desc;

-- Select the release_year for films released after 1990 grouped by year
SELECT release_year
FROM films
WHERE release_year > 1990
GROUP BY release_year;

-- Modify the query to also list the average budget and average gross
SELECT release_year, avg(budget) as avg_budget, avg(gross) as avg_gross
FROM films
WHERE release_year > 1990
GROUP BY release_year;

SELECT release_year, AVG(budget) AS avg_budget, AVG(gross) AS avg_gross
FROM films
WHERE release_year > 1990
GROUP BY release_year
-- Modify the query to see only years with an avg_budget of more than 60 million
HAVING  avg(budget)> 60000000;

SELECT release_year, AVG(budget) AS avg_budget, AVG(gross) AS avg_gross
FROM films
WHERE release_year > 1990
GROUP BY release_year
HAVING AVG(budget) > 60000000
-- Order the results from highest to lowest average gross and limit to one
ORDER BY avg_gross DESC
LIMIT 1;
